

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CHRONOCOVE</title>
	<!-- Bootstrap 5 CDN Link -->
	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet">

	<!-- Custom CSS Link -->
	<link rel="stylesheet" href="/stylesheets/otp.css">
</head>
<body> 
    <section class="wrapper">
		<div class="container pt-5 mt-5">
			<div class="col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 col-xl-6 offset-xl-3 text-center">
				
                <div class="rounded bg-white shadow">

                    <form class="p-5" id="otpForm">
                        <h3 class="text-dark fw-bolder fs-4 mb-2">OTP Verification</h3>
                        
					
                    <p id="message" class="text-danger"><%= locals.msg %></p>
                    <p id="countdown"></p>
                    
                    
                    
                    <div class="otp_input text-start mb-2">
                        <label for="digit">Type your 6 digit security code</label>
                        <div class="d-flex align-items-center justify-content-between mt-2">
                            
                            <input autofocus maxlength="1" type="text"name = "otp1" class="form-control otp-input" placeholder="">
                            <input maxlength="1" type="text" name = "otp2" class="form-control otp-input" placeholder="">
                            <input maxlength="1" type="text" name = "otp3" class="form-control otp-input" placeholder="">
                            <input maxlength="1" type="text" name = "otp4" class="form-control otp-input" placeholder="">
                            <input maxlength="1" type="text" name = "otp5" class="form-control otp-input" placeholder="">
                            <input maxlength="1" type="text" name = "otp6" class="form-control otp-input" placeholder="">
                        </div>
                    </div>
                    
                    
					<button type="submit" class="btn btn-primary submit_btn my-2">Submit</button> 
                </form>
                
                <div class="fw-normal text-muted pb-5 mb-2 form-group">
                    Didn't get the code ?
                    <button type="button" id="resendOTP" class="btn btn-secondary" disabled>Resend OTP</button>
                 </div>
            </div>
			</div>
		</div>
	</section>
    <script>
        // maxlength makes sure that our input box can only contain 1 character.
        const inputBoxes = document.querySelectorAll('.otp-input');

        inputBoxes[0].focus();

        inputBoxes[0].addEventListener('paste', (e) => {
            let paste = (e.clipboardData || window.clipboardData).getData("text");
            for (let i = 0; i < 6; i++) {
                inputBoxes[i].value = paste[i] ?? '';
            }
        });

        inputBoxes.forEach((box, index) => {
            box.addEventListener('input', (e) => {
                if(inputBoxes[index + 1] === undefined) {
                    // We are at the last box.
                    e.preventDefault();
                } else {
                    inputBoxes[index + 1].focus();
                }
            })
        })

 

      //Funciton to start the count down

        const startCountdown = () => {
        let countdown = 60;
        const countdownDisplay = document.getElementById('countdown');
        const resendButton = document.getElementById('resendOTP');

        const updateCountdown = () => {
            const minutes = Math.floor(countdown / 60).toString().padStart(2, '0');
            const seconds = (countdown % 60).toString().padStart(2, '0');
            countdownDisplay.textContent = `${minutes}:${seconds}`;
        }

        const stopCountdown = () => {
            clearInterval(timer);
            countdownDisplay.textContent = "";
        }

        const decrementCountdown = () => {
            countdown--;
            updateCountdown();
            if (countdown === 0) {
                stopCountdown();
                // Enable the resend button
                resendButton.disabled = false;
                resendButton.classList.remove('btn-secondary');
                resendButton.classList.add('btn-primary');
            }
        }

        updateCountdown();
        const timer = setInterval(decrementCountdown, 1000);

        return {
            stop: stopCountdown
        };
    }

    const otpForm = document.getElementById('otpForm');
    otpForm.addEventListener('submit', (e) => {
        e.preventDefault();
        validateOTP();
    })

    function validateOTP() {
        const message = document.getElementById("message");
        const resendButton = document.getElementById("resendOTP");

        let otpValue = '';
        inputBoxes.forEach((box, index) => {
            otpValue += box.value;
        });

        if (!otpValue.match(/^\d+$/)) {
            message.innerText = "OTP must contain only numeric characters.";
            return false;
        } else {
            
            fetch('/verifyOTP', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ otp: parseInt(otpValue) }),
            })
            .then((res) => res.json())
            .then((data) => {
                if (data.isValid) {
                    message.innerText = "";
                    // Redirect to home page if the OTP is valid
                    window.location.href = "/";
                } else {
                    message.innerText = "Invalid OTP. Please try again";
                    // Stop the countdown timer
                    countdownTimer.stop();
                    // Enable the resend button
                    resendButton.disabled = false;
                    resendButton.classList.remove('btn-secondary');
                    resendButton.classList.add('btn-primary');
                }
            })
            .catch((err) => {
                message.innerText = "An error occurred.";
            });

            // Always return false to prevent form submission
            return false;
        }
    }

    const resendButton = document.getElementById('resendOTP');
    resendButton.addEventListener('click', () => {

        // Start the countdown timer
        countdownTimer = startCountdown();

        resendButton.disabled = true;
        resendButton.classList.remove('btn-primary');
        resendButton.classList.add('btn-secondary');

        fetch('/resendOTP', { method: "POST" })
            .then(res => res.json())
            .then(data => {
                document.getElementById("message").innerText = data.msg;
            }).catch(err => {
                document.getElementById("message").innerText = "An error occurred.";
            });
    });

    // Start the initial countdown when the page loads
    let countdownTimer = startCountdown();


</script>


</body>
</html>
